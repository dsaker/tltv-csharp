@model HomeIndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-12">
        <h1>TalkLikeTv</h1>
        <hr/>
        <br/>
        <h2>What is it?</h2>
        <p>TalkLikeTv is a language learning application designed to address limitations I’ve encountered in other popular language learning apps, such as Pimsleur, Babbel, and Duolingo. While these tools serve as strong foundational resources, I’ve found that they tend to plateau once reaching an intermediate level. Currently, I can understand French and Spanish well enough to follow audiobooks and read at a high level, but I still face challenges in expressing myself and comprehending native speakers during travel.</p>
        <p>To overcome these barriers, I’ve created an application that generates a Pimsleur-like audio course from any file the user selects. Personally, I use subtitles from current TV shows from the countries I plan to visit. This approach has several benefits: it familiarizes me with contemporary slang, improves my understanding of spoken dialogue, and challenges me to express myself more naturally. Practicing with these audio files not only enhances comprehension of the shows but also provides an immersive, effective way to advance my language skills.</p>
        <br/>
        <h2>How to use it</h2>
        <ol>
            <li>Get a token. Email or message me if you need one. </li>
            <li>Choose the file you want to upload. You can use srt files (<a href='https://www.opensubtitles.org/' target="_blank">subtitles</a>), lyrics, transcripts, etc.</li>
            <li>Parse the file and check it to make sure it is what you are expecting.
                <ul>
                    <li class="ul-li">Parsing will split up longer phrases into smaller ones if they contain punctuation.</li>
                    <li class="ul-li">If your file contains more than the maximum number of phrases allowed, it will return multiple parsed files of the maximum allowed phrases in a zip file.</li>
                </ul>
            </li>
            @Html.AntiForgeryToken()
            <form asp-action="Index" asp-controller="Home" method="post" enctype="multipart/form-data" class="upload-form">
                <div class="form-group">
                    <input asp-for="File" class="form-control" type="file" />
                    <span asp-validation-for="File" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Parse"  />
                </div>
            </form>

            @if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    @ViewBag.Message
                </div>
            }

            @section Scripts {
                @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
            }
            <li>Choose the pause in seconds you want between phrases.
                <ul>
                    <li class="ul-li"> A four-second pause works well if you plan on sitting at a computer and can pause playback.</li>
                    <li class="ul-li"> Eight to ten seconds works well if stopping playback is not available.</li>
                </ul>
            </li>
            <li>Choose the pattern you want to learn from.
                <ul>
                    <li class="ul-li">Standard works well for most uses.</li>
                    <li class="ul-li">Advanced repeats the phrases less and is suitable if you are already beyond an intermediate level.</li>
                    <li class="ul-li">Review only repeats the phrases one time.</li>
                </ul>
            </li>
            <li>After making your choices go to <a asp-area="" asp-controller="Audio" asp-action="ChooseAudio">Audio</a> to choose your voices.</li>
        </ol>

    </div>
</div>
