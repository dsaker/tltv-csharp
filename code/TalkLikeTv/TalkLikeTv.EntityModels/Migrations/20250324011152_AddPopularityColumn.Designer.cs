// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TalkLikeTv.EntityModels;

#nullable disable

namespace TalkLikeTv.EntityModels.Migrations
{
    [DbContext(typeof(TalkliketvContext))]
    [Migration("20250324011152_AddPopularityColumn")]
    partial class AddPopularityColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TalkLikeTv.EntityModels.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("NativeName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("LanguageId")
                        .HasName("PK__Language__B938558B157F7949");

                    b.HasIndex(new[] { "Name" }, "UQ__Language__737584F60620E8D3")
                        .IsUnique();

                    b.HasIndex(new[] { "Tag" }, "UQ__Language__C4516413E29C3320")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Personality", b =>
                {
                    b.Property<int>("PersonalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonalityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalityId"));

                    b.Property<string>("PersonalityName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("PersonalityId")
                        .HasName("PK__Personal__CD053C54F187B8DC");

                    b.HasIndex(new[] { "PersonalityName" }, "UQ__Personal__6DD1E173CBB571F5")
                        .IsUnique();

                    b.ToTable("Personalities");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Phrase", b =>
                {
                    b.Property<int>("PhraseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhraseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhraseId"));

                    b.Property<int?>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("TitleID");

                    b.HasKey("PhraseId")
                        .HasName("PK__Phrases__0DBA0EA20BE30369");

                    b.HasIndex("TitleId");

                    b.ToTable("Phrases");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Scenario", b =>
                {
                    b.Property<int>("ScenarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScenarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScenarioId"));

                    b.Property<string>("ScenarioName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("ScenarioId")
                        .HasName("PK__Scenario__0DF6D1A39A1B5B0E");

                    b.HasIndex(new[] { "ScenarioName" }, "UQ__Scenario__ADC5B11D78260FCB")
                        .IsUnique();

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StyleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StyleId"));

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("StyleId")
                        .HasName("PK__Styles__8AD147A057377767");

                    b.HasIndex(new[] { "StyleName" }, "UQ__Styles__23564EE60ED94D48")
                        .IsUnique();

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TitleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("NumPhrases")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalLanguageId")
                        .HasColumnType("int")
                        .HasColumnName("OriginalLanguageID");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("TitleId")
                        .HasName("PK__Titles__757589E6D98CFFD1");

                    b.HasIndex("OriginalLanguageId");

                    b.HasIndex(new[] { "TitleName" }, "UQ__Titles__252BE89C0BF9B926")
                        .IsUnique();

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Token", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TokenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Used")
                        .HasColumnType("bit");

                    b.HasKey("TokenId")
                        .HasName("PK__Tokens__658FEE8A40067671");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Translate", b =>
                {
                    b.Property<int>("PhraseId")
                        .HasColumnType("int")
                        .HasColumnName("PhraseID");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    b.Property<string>("Phrase")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhraseHint")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PhraseId", "LanguageId")
                        .HasName("PK__Translat__A6298BFA0F5D3F2A");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translates");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Voice", b =>
                {
                    b.Property<int>("VoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoiceId"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LocaleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("SampleRateHertz")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("VoiceType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("WordsPerMinute")
                        .HasColumnType("int");

                    b.HasKey("VoiceId")
                        .HasName("PK__Voices__D870D587186CF99C");

                    b.HasIndex("LanguageId");

                    b.HasIndex(new[] { "ShortName" }, "UQ__Voices__A6160FD1C3922DD5")
                        .IsUnique();

                    b.ToTable("Voices");
                });

            modelBuilder.Entity("VoicePersonality", b =>
                {
                    b.Property<int>("VoiceId")
                        .HasColumnType("int")
                        .HasColumnName("VoiceID");

                    b.Property<int>("PersonalityId")
                        .HasColumnType("int")
                        .HasColumnName("PersonalityID");

                    b.HasKey("VoiceId", "PersonalityId")
                        .HasName("PK__VoicePer__84A08642C51F02F2");

                    b.HasIndex("PersonalityId");

                    b.ToTable("VoicePersonalities", (string)null);
                });

            modelBuilder.Entity("VoiceScenario", b =>
                {
                    b.Property<int>("VoiceId")
                        .HasColumnType("int")
                        .HasColumnName("VoiceID");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("int")
                        .HasColumnName("ScenarioID");

                    b.HasKey("VoiceId", "ScenarioId")
                        .HasName("PK__VoiceSce__F8AFB89D9B0E5462");

                    b.HasIndex("ScenarioId");

                    b.ToTable("VoiceScenarios", (string)null);
                });

            modelBuilder.Entity("VoiceStyle", b =>
                {
                    b.Property<int>("VoiceId")
                        .HasColumnType("int")
                        .HasColumnName("VoiceID");

                    b.Property<int>("StyleId")
                        .HasColumnType("int")
                        .HasColumnName("StyleID");

                    b.HasKey("VoiceId", "StyleId")
                        .HasName("PK__VoiceSty__C0DDC1FD59FFE951");

                    b.HasIndex("StyleId");

                    b.ToTable("VoiceStyles", (string)null);
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Phrase", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Title", "Title")
                        .WithMany("Phrases")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Phrases__TitleID__5A254709");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Title", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Language", "OriginalLanguage")
                        .WithMany("Titles")
                        .HasForeignKey("OriginalLanguageId")
                        .HasConstraintName("FK__Titles__Original__5748DA5E");

                    b.Navigation("OriginalLanguage");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Translate", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Language", "Language")
                        .WithMany("Translates")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Translate__Langu__5DF5D7ED");

                    b.HasOne("TalkLikeTv.EntityModels.Phrase", "PhraseNavigation")
                        .WithMany("Translates")
                        .HasForeignKey("PhraseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Translate__Phras__5D01B3B4");

                    b.Navigation("Language");

                    b.Navigation("PhraseNavigation");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Voice", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Language", "Language")
                        .WithMany("Voices")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK__Voices__Language__3F7150CD");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("VoicePersonality", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Personality", null)
                        .WithMany()
                        .HasForeignKey("PersonalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoicePers__Perso__5378497A");

                    b.HasOne("TalkLikeTv.EntityModels.Voice", null)
                        .WithMany()
                        .HasForeignKey("VoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoicePers__Voice__52842541");
                });

            modelBuilder.Entity("VoiceScenario", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Scenario", null)
                        .WithMany()
                        .HasForeignKey("ScenarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoiceScen__Scena__4CCB4BEB");

                    b.HasOne("TalkLikeTv.EntityModels.Voice", null)
                        .WithMany()
                        .HasForeignKey("VoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoiceScen__Voice__4BD727B2");
                });

            modelBuilder.Entity("VoiceStyle", b =>
                {
                    b.HasOne("TalkLikeTv.EntityModels.Style", null)
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoiceStyl__Style__461E4E5C");

                    b.HasOne("TalkLikeTv.EntityModels.Voice", null)
                        .WithMany()
                        .HasForeignKey("VoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VoiceStyl__Voice__452A2A23");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Language", b =>
                {
                    b.Navigation("Titles");

                    b.Navigation("Translates");

                    b.Navigation("Voices");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Phrase", b =>
                {
                    b.Navigation("Translates");
                });

            modelBuilder.Entity("TalkLikeTv.EntityModels.Title", b =>
                {
                    b.Navigation("Phrases");
                });
#pragma warning restore 612, 618
        }
    }
}
